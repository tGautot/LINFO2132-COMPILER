
record Point {
    x real;
    y real;
}

/* This function adds up all the points of an array
 * and returns the sum
 */
proc addPoints(ps Point[]) Point {
    var res Point = Point(0,0) var i int
    for i=0 to len(ps) by 1 {
        res.x += ps[i].x
        res.y += ps[i].y
    }
    write("i: ")
    writeInt(i)
    return res
}

var marathon Point[][] = Point[][](2,10) // syntax for dimensions of multi-dim array
writeInt(len(marathon))
writeInt(len(marathon[0]))
var i int var j int var k int
for i=0 to len(marathon) by 1 {
    for j=0 to len(marathon[i]) by 1 {
        marathon[i][j] = Point(0,0);
        marathon[i][j].x = (i+1)*j*1.1;
        marathon[i][j].y = floor((i+1)*j*1.1);
    }
}

var res1 Point = addPoints(marathon[0]);
var res2 Point = addPoints(marathon[1]);
writeln("-----------")
writeReal(res1.x)
writeReal(res1.y)
writeln("-----------")
writeReal(res2.x)
writeReal(res2.y)





/*proc printHello(name string) void {
    write("Hello ") writeln(name) return
}

proc printGoodbye(name string) void {
    write("Goodbye ");
    writeln(name);
}

record Point {
    x int;;;;
    y int
    z int
}

var rom string = "Romain" printHello(rom) printGoodbye("Romain")
var i int i = 0 writeInt(i) i+=5 var j int = 4 writeInt(i+j)*/








/*record Point {
    x int;
    y int;
    z int;
}

record History{
    pos Point[];
    tim real[];
}

var ps Point[] = Point[](3)
var hist History = History(ps, real[](3))
var i int;
for i=0 to 3 by 1 {
    ps[i] = Point(i,i,i)
    hist.tim[i]=i*2.2
}*/









/*
const a int = 10;
const b int = 20;
const c real = (a+b)/2.0;


proc square(v real) real {
    return v*v;
}

var i int; var j int; var k int;

for i=0 to 5 by 1 {
    var x int = i*2;
    for j=0 to x by 2 {
        var y int = i*2;
        for k=0 to x+y by 4 {
            var z int = k+x+y;
            writeInt(z*a);
        }
        var z real = 7.4*3.14152;
    }
}
*/







